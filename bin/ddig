#!/bin/bash

prereq() {

  if type dig > /dev/null 2>&1; then
    DIG="$(which dig)"
    ARGS=(+short +tcp)
  elif type kdig > /dev/null 2>&1; then
    DIG="$(which kdig)"
    ARGS=(+short +tcp)
  elif type drill > /dev/null 2>&1; then
    DIG="$(which drill)"
    ARGS=(-Q -t)

    if [[ $("${DIG}" -v | grep -Po 'drill version \K[^(]*' | sed 's/.//g') -le 180 ]]; then
      echo 'Your installed version of "drill" is unsupported.'
      echo 'Version > 1.8.0 required for "short" functionality.'
      exit 1
    fi
  else
    echo 'Could not find "dig" or "drill", this function will not work.'
    exit 1
  fi

}

recursive_cname() {

  local cname_record

  cname_record="$("${DIG}" "${ARGS[@]}" "$@" | head -n1)"
  if ! [[ (( "${cname_record}" =~ ^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}[0-9]{1,3} )) || (( -z "${cname_record}" )) ]]; then
    cname="yes"
    echo "${1} resolves to ${cname_record}"
    fcname_record="${cname_record}"
    recursive_cname "${cname_record}"
  else
    return 1
  fi

}

whois_stuff() {

  local WHOIS STRING

  if type whois > /dev/null 2>&1; then
    WHOIS="$(which whois)"
    STRING='^NetName:|^Organization:|^OrgName:|^OrgId:'
  else
    return 1
  fi

  "$WHOIS" "$1" | grep -E "$STRING" | head -n4
    
}

record_check() {

  local record_type
  local -a records

  record_type="$2"

  if [[ -z "${record_type}" ]]; then
    return 1
  fi

  if [[ "${record_type}" = "PTR" ]]; then
    records=( "$("${DIG}" "${ARGS[@]}" "-x" "$1")" )
    whois_stuff "$1"
    while read -r record; do
      echo "${record_type}: ${record}"
    done < <(echo "${records[@]}")
  elif [[ "${record_type}" = "DMARC" ]]; then
    echo "DMARC: $("${DIG}" "${ARGS[@]}" TXT _dmarc."$1")"
  else
    records=( "$("${DIG}" "${ARGS[@]}" "$record_type" "$1")" )
    if [[ -n "${records[@]}" ]]; then
      while read -r record; do
        echo "${record_type}: ${record}"
        if [[ "${record_type}" = "A" ]]; then
          record_check "${record}" "PTR"
        fi
      done < <(echo "${records[@]}")
    else
      echo "No ${record_type} record found for $1"
    fi
  fi

}

main() {

  prereq

  recursive_cname "$1"

  if [[ "${cname}" = "yes" ]]; then
    echo -e "\nResolving IPs for ${fcname_record}:"
    a_stuff "${fcname_record}"
    echo -e "\n${1} is a CNAME, no additional records set."
  else
    for record_type in A MX NS TXT DMARC; do
      record_check "$1" "${record_type}"
    done
  fi

}

main "$@"
