#! /bin/bash

function prereq() {

  if type dig > /dev/null 2>&1; then
    DIG=$(which dig)
    ARGS=("+short")
  elif type kdig > /dev/null 2>&1; then
    DIG=$(which kdig)
    ARGS=("+short")
  elif type drill > /dev/null 2>&1; then
    if [[ $($(which drill) -v | grep -Po 'drill version \K[^(]*' | sed 's/.//g') -le 180 ]]; then
      echo 'Your installed version of `drill` is unsupported.'
      echo 'Version > 1.8.0 required for "short" functionality.'
      exit 1
    else
      DIG=$(which drill)
      ARGS=("-Q")
    fi
  else
    echo 'Could not find `dig` or `drill`, this function will not work.'
    exit 1
  fi

}

function recursive_cname() {

  local cname_records

  cname_record=$("$DIG" "${ARGS[@]}" "$@" | head -n1)
  if ! [[ (( "$cname_record" =~ ^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}[0-9]{1,3} )) || (( -z "$cname_record" )) ]]; then
    cname="yes"
    echo "${1} resolves to ${cname_record}"
    fcname_record="$cname_record"
    recursive_cname "$cname_record"
  else
    return 1
  fi

}

function whois_stuff() {

  local WHOIS STRING

  if type whois > /dev/null 2>&1; then
    WHOIS=$(which whois)
    STRING='^NetName:|^Organization:|^OrgName:|^OrgId:'
  else
    return 1
  fi

  "$WHOIS" "$1" | grep -E "$STRING" | head -n4
    
}

function a_stuff() {

  local a_records

  a_records=$("$DIG" "${ARGS[@]}" A "$1")

  echo "$a_records" | while read -r ip; do
    echo "A: ${ip}"
    if [ -n "$ip" ]; then
      whois_stuff "$ip"
      echo "PTR: $("$DIG" "${ARGS[@]}" -x "$ip")"
    fi
  done

}

function other_stuff() {

  local dmarc_record mx_records ns_records txt_records

  mx_records=$("$DIG" "${ARGS[@]}" MX "$1")
  echo "$mx_records" | while read -r record; do
    echo "MX: ${record}"
  done

  ns_records=$("$DIG" "${ARGS[@]}" NS "$1")
  echo "$ns_records" | while read -r record; do
    echo "NS: ${record}"
  done

  txt_records=$("$DIG" "${ARGS[@]}" +tcp TXT "$1")
  echo "$txt_records" | while read -r record; do
    echo "TXT: ${record}"
  done

  echo "DMARC: $("$DIG" "${ARGS[@]}" TXT _dmarc."$1")"

}

function main() {

  prereq

  recursive_cname "$1"

  if [[ "$cname" = "yes" ]]; then
    echo -e "\nResolving IPs for ${fcname_record}:"
    a_stuff "$fcname_record"
    echo -e "\n${1} is a CNAME, no additional records set."
  else
    a_stuff "$1"
    other_stuff "$1"
  fi

}

main "$@"
